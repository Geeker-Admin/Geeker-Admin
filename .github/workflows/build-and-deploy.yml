name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# 添加必要的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm type:check

      - name: Lint with ESLint
        run: pnpm lint:eslint

      - name: Lint with Stylelint
        run: pnpm lint:stylelint

      - name: Build project
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 30

      - name: Build size analysis
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          export VITE_REPORT=true
          pnpm build
        env:
          NODE_ENV: production

      - name: Comment PR with build status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const distPath = path.join(process.cwd(), 'dist');
              const stats = fs.statSync(distPath);
              const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ 构建成功！\n\n📦 构建产物大小: ${sizeInMB} MB\n🔗 构建时间: ${new Date().toISOString()}`
              });
            } catch (error) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `❌ 构建失败！\n\n请检查构建日志以获取更多信息。`
              });
            }

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Success message
        run: |
          echo "✅ 部署成功！"
          echo "📱 预览地址: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "🔗 部署时间: $(date)"
